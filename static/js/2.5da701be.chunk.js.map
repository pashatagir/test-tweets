{"version":3,"file":"static/js/2.5da701be.chunk.js","mappings":"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","sources":["components/Buttons/Buttons.jsx","components/Card/Card.jsx","helpers/dataFollowersInString.js","components/ListCards/ListCards.jsx","components/Loader/Loader.jsx","redux/usersSelectors.js","components/Section/MainSection.jsx","pages/Tweets.jsx"],"sourcesContent":["import { BtnFilter, ButtonFollows } from 'components/Style/Style.styled';\n\nexport const LoadMoreBtn = ({ onClick }) => (\n  <ButtonFollows\n    type=\"button\"\n    onClick={onClick}\n    style={{\n      backgroundColor: '#5CD3A8',\n    }}\n  >\n    Load more\n  </ButtonFollows>\n);\n\nexport const ButtonFilter = ({\n  selected = false,\n  type = 'button',\n  children,\n  ...otherProps\n}) => {\n  return (\n    <BtnFilter type={type} {...otherProps}>\n      {children}\n    </BtnFilter>\n  );\n};\n","import { useDispatch } from 'react-redux';\nimport { changeUser } from '../../redux/usersOperations';\nimport {\n  Avatar,\n  AvatarWrap,\n  ButtonFollows,\n  DecorLine,\n  Followers,\n  InfoWrapper,\n  Item,\n  Tweets,\n} from 'components/Style/Style.styled';\nimport { dataFollowersInString } from '../../helpers/dataFollowersInString';\n\nexport const Card = ({ avatar, tweets, followers, user, id, isFollower }) => {\n  const dispatch = useDispatch();\n  const oneUser = { avatar, tweets, user, id };\n\n  const handlerClick = () => {\n    if (!isFollower) {\n      dispatch(\n        changeUser({\n          ...oneUser,\n          followers: followers + 1,\n          isFollower: true,\n        })\n      );\n    } else {\n      dispatch(\n        changeUser({\n          ...oneUser,\n          followers: followers - 1,\n          isFollower: false,\n        })\n      );\n    }\n  };\n\n  return (\n    <Item>\n      <DecorLine>\n        <AvatarWrap>\n          <Avatar src={avatar} alt={user} />\n        </AvatarWrap>\n        <InfoWrapper>\n          <Tweets>{tweets} Tweets</Tweets>\n          <Followers>{dataFollowersInString(followers)} Followers</Followers>\n          <ButtonFollows\n            type=\"button\"\n            onClick={handlerClick}\n            bgColor={isFollower}\n          >\n            {!isFollower ? 'Follow' : 'Following'}\n          </ButtonFollows>\n        </InfoWrapper>\n      </DecorLine>\n    </Item>\n  );\n};\n","export const dataFollowersInString = (f) => {\n  if (f.toString().length > 3) {\n    return (\n      f.toString().slice(0, f.toString().length - 3) +\n      \",\" +\n      f.toString().slice(f.toString().length - 3)\n    );\n  }\n  return f.toString();\n};\n","import { Card } from '../Card/Card';\nimport { List } from 'components/Style/Style.styled';\n\nexport const ListCards = ({ items }) => {\n  return (\n    <List>\n      {items?.map(item => (\n        <Card\n          key={item.id}\n          avatar={item.avatar}\n          tweets={item.tweets}\n          followers={item.followers}\n          user={item.user}\n          id={item.id}\n          isFollower={item.isFollower}\n        />\n      ))}\n    </List>\n  );\n};\n","import PacmanLoader from 'react-spinners/PacmanLoader';\nimport { LoaderContainer } from 'components/Style/Style.styled';\n\nexport const Loader = () => (\n  <LoaderContainer>\n    <PacmanLoader color=\"#f7f507\" size=\"50px\" />\n  </LoaderContainer>\n);\n","import { createSelector } from '@reduxjs/toolkit/dist';\nimport { statusFilters } from 'helpers/statusFilters';\n\nexport const selectState = state => state.users;\nexport const selectUsers = state => state.users.items;\nexport const selectStatusFilter = state => state.filters.status;\n\nexport const selectVisibleUsers = createSelector(\n  [selectUsers, selectStatusFilter],\n  (users, statusFilter) => {\n    switch (statusFilter) {\n      case statusFilters.follow:\n        return users.filter(user => !user.isFollower);\n      case statusFilters.following:\n        return users.filter(user => user.isFollower);\n      default:\n        return users;\n    }\n  }\n);\n","import { LoadMoreBtn } from 'components/Buttons/Buttons';\n// import { StatusFilter } from 'components/Filters/Filters';\nimport { ListCards } from 'components/ListCards/ListCards';\nimport { Loader } from 'components/Loader/Loader';\nimport {\n  // ButtonFilters,\n  CardsContainer,\n  Navlink,\n  SectionContainer,\n  Warning,\n} from 'components/Style/Style.styled';\nimport { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useLocation } from 'react-router-dom';\nimport { fetchUsers } from 'redux/usersOperations';\nimport {\n  selectState,\n  // selectVisibleUsers\n} from 'redux/usersSelectors';\n\nexport const MainSection = () => {\n  const location = useLocation();\n  const dispatch = useDispatch();\n  const { isLoading, error, limit, items } = useSelector(selectState);\n  const [showBtn, setShowBtn] = useState(false);\n  const [noOfElement, setNoOfElement] = useState(limit);\n  const slice = items.slice(0, noOfElement);\n  useEffect(() => {\n    setShowBtn(true);\n    dispatch(fetchUsers());\n  }, [dispatch]);\n\n  const onLoadMore = () => {\n    setNoOfElement(noOfElement + 3);\n    if (noOfElement > items.length - 6) {\n      setShowBtn(false);\n    }\n  };\n\n  // const users = useSelector(selectVisibleUsers);\n\n  // const onSelectFilter = slice => {\n  //   return slice.filter(item => !item.isFollower);\n  // };\n\n  // const filteredSlice = onSelectFilter(slice);\n\n  const goBackLink = location?.state?.from ?? '/';\n\n  return (\n    <>\n      <Navlink to={goBackLink}>Go back</Navlink>\n      {/* <ButtonFilters>Filters</ButtonFilters> */}\n      {/* <StatusFilter /> */}\n      <SectionContainer>\n        <CardsContainer>\n          {isLoading && !error && <Loader />}\n          <ListCards items={slice} />\n          {isLoading && <Loader />}\n        </CardsContainer>\n        {showBtn ? (\n          <LoadMoreBtn onClick={onLoadMore} />\n        ) : (\n          <Warning>Sorry this is the end!</Warning>\n        )}\n      </SectionContainer>\n    </>\n  );\n};\n","import { MainSection } from 'components/Section/MainSection';\n\nconst Tweets = () => <MainSection />;\n\nexport default Tweets;\n"],"names":["LoadMoreBtn","onClick","type","style","backgroundColor","Card","f","avatar","tweets","followers","user","id","isFollower","dispatch","useDispatch","oneUser","src","alt","toString","length","slice","changeUser","bgColor","ListCards","items","map","item","Loader","color","size","selectState","state","users","MainSection","createSelector","filters","status","statusFilter","statusFilters","filter","location","useLocation","useSelector","isLoading","error","limit","useState","showBtn","setShowBtn","noOfElement","setNoOfElement","useEffect","fetchUsers","goBackLink","from","to"],"sourceRoot":""}